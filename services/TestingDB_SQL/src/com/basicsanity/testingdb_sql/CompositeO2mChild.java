/*Copyright (c) 2018-2019 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.basicsanity.testingdb_sql;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * CompositeO2mChild generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`Composite O2M child`")
public class CompositeO2mChild implements Serializable {

    private Integer id;
    private String column2;
    private String column3;
    private Integer column4;
    private String column5;
    private CompositeO2mParent compositeO2mParent;

    @Id
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`COLUMN2`", nullable = true, length = 255)
    public String getColumn2() {
        return this.column2;
    }

    public void setColumn2(String column2) {
        this.column2 = column2;
    }

    @Column(name = "`COLUMN3`", nullable = true, length = 255)
    public String getColumn3() {
        return this.column3;
    }

    public void setColumn3(String column3) {
        this.column3 = column3;
    }

    @Column(name = "`COLUMN4`", nullable = true, scale = 0, precision = 10)
    public Integer getColumn4() {
        return this.column4;
    }

    public void setColumn4(Integer column4) {
        this.column4 = column4;
    }

    @Column(name = "`COLUMN5`", nullable = true, length = 255)
    public String getColumn5() {
        return this.column5;
    }

    public void setColumn5(String column5) {
        this.column5 = column5;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumns(value = {
            @JoinColumn(name = "`COLUMN4`", referencedColumnName = "`ID`", insertable = false, updatable = false),
            @JoinColumn(name = "`COLUMN5`", referencedColumnName = "`COLUMN2`", insertable = false, updatable = false)},
        foreignKey = @ForeignKey(name = "`FK_Composite_O2M_parent_ZGihm`"))
    @Fetch(FetchMode.JOIN)
    public CompositeO2mParent getCompositeO2mParent() {
        return this.compositeO2mParent;
    }

    public void setCompositeO2mParent(CompositeO2mParent compositeO2mParent) {
        if(compositeO2mParent != null) {
            this.column4 = compositeO2mParent.getId();
            this.column5 = compositeO2mParent.getColumn2();
        }

        this.compositeO2mParent = compositeO2mParent;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CompositeO2mChild)) return false;
        final CompositeO2mChild compositeO2mChild = (CompositeO2mChild) o;
        return Objects.equals(getId(), compositeO2mChild.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}