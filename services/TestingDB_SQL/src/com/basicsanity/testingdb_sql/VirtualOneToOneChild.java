/*Copyright (c) 2018-2019 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.basicsanity.testingdb_sql;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * VirtualOneToOneChild generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`Virtual One to One Child`", uniqueConstraints = {
            @UniqueConstraint(name = "`UK_Virtual_One_to_One_Ch9EmDZ`", columnNames = {"`Virtual One to One Parent`"})})
@IdClass(VirtualOneToOneChildId.class)
public class VirtualOneToOneChild implements Serializable {

    private Integer virtualOneToOneParent;
    private String virtualDate;
    private Boolean virtualBoolean;

    @Id
    @Column(name = "`Virtual One to One Parent`", nullable = true, scale = 0, precision = 10)
    public Integer getVirtualOneToOneParent() {
        return this.virtualOneToOneParent;
    }

    public void setVirtualOneToOneParent(Integer virtualOneToOneParent) {
        this.virtualOneToOneParent = virtualOneToOneParent;
    }

    @Id
    @Column(name = "`Virtual Date`", nullable = true, length = 20)
    public String getVirtualDate() {
        return this.virtualDate;
    }

    public void setVirtualDate(String virtualDate) {
        this.virtualDate = virtualDate;
    }

    @Id
    @Column(name = "`Virtual Boolean`", nullable = true)
    public Boolean getVirtualBoolean() {
        return this.virtualBoolean;
    }

    public void setVirtualBoolean(Boolean virtualBoolean) {
        this.virtualBoolean = virtualBoolean;
    }



    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof VirtualOneToOneChild)) return false;
        final VirtualOneToOneChild virtualOneToOneChild = (VirtualOneToOneChild) o;
        return Objects.equals(getVirtualOneToOneParent(), virtualOneToOneChild.getVirtualOneToOneParent()) &&
                Objects.equals(getVirtualDate(), virtualOneToOneChild.getVirtualDate()) &&
                Objects.equals(getVirtualBoolean(), virtualOneToOneChild.getVirtualBoolean());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getVirtualOneToOneParent(),
                getVirtualDate(),
                getVirtualBoolean());
    }
}