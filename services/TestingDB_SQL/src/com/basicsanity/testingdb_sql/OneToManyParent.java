/*Copyright (c) 2018-2019 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.basicsanity.testingdb_sql;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

/**
 * OneToManyParent generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`OneToMany Parent`")
public class OneToManyParent implements Serializable {

    private Integer pkColumn;
    private String stringColumn;
    private Boolean booleanColumn;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`PK Column`", nullable = false, scale = 0, precision = 10)
    public Integer getPkColumn() {
        return this.pkColumn;
    }

    public void setPkColumn(Integer pkColumn) {
        this.pkColumn = pkColumn;
    }

    @Column(name = "`String Column`", nullable = true, length = 255)
    public String getStringColumn() {
        return this.stringColumn;
    }

    public void setStringColumn(String stringColumn) {
        this.stringColumn = stringColumn;
    }

    @Column(name = "`Boolean Column`", nullable = true)
    public Boolean getBooleanColumn() {
        return this.booleanColumn;
    }

    public void setBooleanColumn(Boolean booleanColumn) {
        this.booleanColumn = booleanColumn;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof OneToManyParent)) return false;
        final OneToManyParent oneToManyParent = (OneToManyParent) o;
        return Objects.equals(getPkColumn(), oneToManyParent.getPkColumn());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getPkColumn());
    }
}